{
  /**
   * Better Defaults
   **/
  "diffEditor.ignoreTrimWhitespace": false,
  "diffEditor.renderSideBySide": false,
  "editor.copyWithSyntaxHighlighting": false,
  "editor.detectIndentation": false,
  "editor.emptySelectionClipboard": false,
  "editor.snippetSuggestions": "top",
  "editor.tabSize": 2,
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "keyboard.dispatch": "keyCode",
  "search.smartCase": true,
  "terminal.integrated.enableMultiLinePasteWarning": "never",
  "window.newWindowDimensions": "maximized",
  "window.zoomLevel": 1,
  "workbench.editor.enablePreview": false,
  "workbench.enableExperiments": false,
  "workbench.settings.editor": "json",

  /**
   * Hide Everything
   **/
  "workbench.statusBar.visible": false,
  "workbench.activityBar.location": "hidden", // "top" is also good choice
  "workbench.sideBar.location": "right",
  "editor.minimap.enabled": false,
  "window.commandCenter": false,
  "workbench.editor.showTabs": "single",
  "workbench.layoutControl.enabled": false,

  /**
   * Silence The Noise
   */
  "breadcrumbs.enabled": false,
  "editor.lightbulb.enabled": "off",
  "editor.overviewRulerBorder": false,
  "editor.renderControlCharacters": false,
  "editor.renderWhitespace": "none",
  "workbench.editor.enablePreviewFromQuickOpen": false,
  "workbench.editor.labelFormat": "short",
  "workbench.editor.tabActionCloseVisibility": false,
  "workbench.startupEditor": "none",
  "workbench.tips.enabled": false,

  /**
   * Explorer
   */
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    // https://gist.github.com/EvanBacon/4a28baa79c396afc435b3731e8c88dc7
    "*.ts": "$(capture).test.ts, $(capture).test.tsx, $(capture).test.node.ts, $(capture).test.node.tsx, $(capture).test.native.ts, $(capture).test.native.tsx, $(capture).test.ios.ts, $(capture).test.ios.tsx, $(capture).test.web.ts, $(capture).test.web.tsx, $(capture).test.android.ts, $(capture).test.android.tsx, ${capture}.native.tsx, ${capture}.ios.tsx, ${capture}.android.tsx, ${capture}.web.tsx, ${capture}.native.ts, ${capture}.ios.ts, ${capture}.android.ts, ${capture}.web.ts, ${capture}.native.js, ${capture}.ios.js, ${capture}.android.js, ${capture}.web.js, ${capture}.native.jsx, ${capture}.ios.jsx, ${capture}.android.jsx, ${capture}.web.jsx",
    "*.tsx": "$(capture).test.ts, $(capture).test.tsx, $(capture).test.node.ts, $(capture).test.node.tsx, $(capture).test.native.ts, $(capture).test.native.tsx, $(capture).test.ios.ts, $(capture).test.ios.tsx, $(capture).test.web.ts, $(capture).test.web.tsx, $(capture).test.android.ts, $(capture).test.android.tsx, ${capture}.native.tsx, ${capture}.ios.tsx, ${capture}.android.tsx, ${capture}.web.tsx, ${capture}.native.ts, ${capture}.ios.ts, ${capture}.android.ts, ${capture}.web.ts, ${capture}.native.js, ${capture}.ios.js, ${capture}.android.js, ${capture}.web.js, ${capture}.native.jsx, ${capture}.ios.jsx, ${capture}.android.jsx, ${capture}.web.jsx",
    // updated 2023-05-23 12:49
    // https://github.com/antfu/vscode-file-nesting-config
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx",
    "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "readme*": "authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
  },

  /**
   * Git
   */
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.detectSubmodules": false,
  "git.enableSmartCommit": true,
  "git.openDiffOnClick": false,
  "scm.showHistoryGraph": false,

  /**
   * Search
   */
  "search.exclude": {
    "**/package-lock.json": true,
    "**/pnpm-lock.yaml": true
  },

  /**
   * IntelliSense
   */
  "editor.inlineSuggest.enabled": true, // copilot suggestions
  "editor.suggest.showWords": false, // `abc` suggestions
  "editor.quickSuggestions": {
    "strings": true
  },

  /**
   * Code
   */
  "[astro]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
  "[css]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
  "[html]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
  "[javascript]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
  "[javascriptreact]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
  "[json]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
  "[jsonc]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
  "[typescript]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
  "[typescriptreact]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
  "editor.autoClosingBrackets": "never",
  "editor.formatOnSave": true,
  "javascript.format.enable": false,
  "typescript.format.enable": false,
  "javascript.preferences.importModuleSpecifier": "non-relative",
  "typescript.preferences.importModuleSpecifier": "non-relative",
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",

  /**
   * Typography
   **/
  "editor.fontFamily": "MonoLisa, FiraCode-Retina, 'Fira code', Menlo, Monaco, 'Courier New', monospace",
  "editor.fontSize": 13,
  "editor.suggestFontSize": 13,
  "terminal.integrated.fontSize": 13,

  /**
   * Aesthetics
   **/
  "editor.scrollbar.horizontalScrollbarSize": 10,
  "editor.scrollbar.verticalScrollbarSize": 10,
  "window.autoDetectColorScheme": true,
  "workbench.iconTheme": "chalice-icon-theme",
  "workbench.preferredDarkColorTheme": "GitHub Dark",
  "workbench.preferredLightColorTheme": "GitHub Light",

  /**
   * Extensions
   **/
  "emmet.triggerExpansionOnTab": true,
  "extensions.ignoreRecommendations": true,
  "githubPullRequests.fileListLayout": "tree",
  "githubPullRequests.pullBranch": "never",
  "githubPullRequests.pushBranch": "always",
  "gitlens.ai.experimental.generateCommitMessage.enabled": false,
  "gitlens.blame.avatars": false,
  "gitlens.blame.heatmap.enabled": false,
  "gitlens.blame.highlight.locations": ["overview", "line", "gutter"],
  "gitlens.codeLens.enabled": false,
  "gitlens.currentLine.enabled": false,
  "gitlens.currentLine.pullRequests.enabled": false,
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.hovers.enabled": false,
  "gitlens.menus": false,
  "gitlens.plusFeatures.enabled": false,
  "gitlens.showWelcomeOnInstall": false,
  "gitlens.showWhatsNewAfterUpgrades": false,
  "gitlens.statusBar.enabled": false,
  "gitlens.telemetry.enabled": false,
  "gitlens.views.branches.avatars": false,
  "gitlens.views.commits.avatars": false,
  "gitlens.views.commits.showBranchComparison": false,
  "gitlens.views.fileHistory.avatars": false,
  // "prettier.requireConfig": true, // good, but i want format JSON without config
  "prettier.trailingComma": "all",
  "prettier.useEditorConfig": false,
  "supermaven.enable": { "*": true },
  "svg.preview.mode": "img",
  "tailwindCSS.emmetCompletions": true,
  "tailwindCSS.includeLanguages": {
    "typescript": "javascript",
    "typescriptreact": "javascript"
  },

  /**
   * Cursor
   */
  "workbench.activityBar.orientation": "vertical",

  /**
   * Newcomers
   */
  "---": "---"
}
